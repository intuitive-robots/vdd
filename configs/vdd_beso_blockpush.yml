# cw2 config
repetitions: 1
reps_per_job: 1
reps_in_parallel: 1
iterations: &iterations 20001
num_checkpoints: 2

# Global config
exp_path: &exp_path "./cw2_results/vdd/blockpush"
exp_name: &exp_name "vdd_beso_block_push"


# cw2 config
name: *exp_name
path: *exp_path
device: &device "cuda"
dtype: &dtype "float32"
seed:  &seed 0
enable_wandb: false

# wandb
wandb:
  project: "VDD_BlockPush"
  group: *exp_name
  entity: [YOUR_WANDB_ENTITY]
  log_interval: 10
  log_model: false
  model_name: model

params:
  gpu_id: 0
  policy_params:
    moe_params:
      obs_dim: 10
      act_dim: 2
      goal_dim: 10
      goal_conditional: true
      num_components: 4
      cmp_cov_type: "full"
      cmp_mean_hidden_dims: 512
      cmp_mean_hidden_layers: 2
      cmp_cov_hidden_dims: 512
      cmp_cov_hidden_layers: 2
      bias_init_bound: 1.0
      cmp_activation: "mish"
      cmp_init: 'orthogonal'
      cmp_init_std: 1.0
      cmp_minimal_std: 0.0001
      prior_type: "uniform"
      learn_gating: true
      gating_hidden_layers: 2
      gating_hidden_dims: 64
      greedy_predict: false
    #### Transformer
    backbone_params:
      use_transformer: true
      n_layers: 4
      window_size: &window_size 5
      goal_seq_len: 1
      n_heads: 12
      embed_dim: 240
      embed_pdrop: 0.0
      atten_pdrop: 0.05
      resid_pdrop: 0.05
    #### vision encoder params
    vision_task: false


  optimizer_params:
    optimizer_type: "adam"
    cmps_lr: 0.0001
    cmps_lr_schedule: "linear"
    cmps_weight_decay: 0.0
    gating_lr: 0.0001
    gating_lr_schedule: "linear"
    gating_weight_decay: 0.0

  train_params:
    max_train_iters: *iterations
    cmp_steps: 2
    gating_steps: 1
    fix_gating_after_iters: *iterations
    vi_batch_size: 2
    train_batch_size: &train_batch_size 1024
    test_batch_size: &test_batch_size 1024
#    num_workers: &num_workers 4
    test_interval: 10
    env_rollout_interval: 4000
    num_rollouts: 40
    num_contexts: 10
    final_num_contexts: 1
    final_num_rollouts: 200
    device: *device
    dtype: *dtype

  experiment_params:
    experiment_name: "block_push"
    model_path: "[PATH to beso]/beso/trained_models/block_push/c_beso_1"
    sv_name: "model_state_dict.pth"
    model_select_metric: "avrg_result"
    datasets_config:
      train_batch_size: *train_batch_size
      test_batch_size: *test_batch_size
      window_size: *window_size
      train_fraction: 0.95
      num_workers: 1
    score_fn_params:
      noise_level_type: "uniform"
      weights_type: "stable"
      sigma_min: 0.2
      sigma_max: 0.5
    seed: *seed







